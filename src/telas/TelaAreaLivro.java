/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package telas;

import ENUMERADORES.EnumNomesDeArquivos;
import classes.AreaCdd;
import controle.ControleArea;
import java.util.ArrayList;
import java.util.Collections;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author roger
 */
public class TelaAreaLivro extends javax.swing.JDialog {

    AreaCdd area = null;
    AreaCdd areaAnterior = null;
    ControleArea controleArea = null;
    String arquivoOrigem = null;

    /**
     * Creates new form TelaAreaLivro
     */
    public TelaAreaLivro(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        try {
            initComponents();
            setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
            desabilitaCampos();
            jButtonPesquisarCdd.setEnabled(false);
            jTextFieldCodigoCDD.requestFocus();

            area = new AreaCdd();
            areaAnterior = new AreaCdd();
            controleArea = new ControleArea(EnumNomesDeArquivos.AREAS + ".txt");
            arquivoOrigem = EnumNomesDeArquivos.CDDORIGEM + ".txt";
            System.out.println(arquivoOrigem);
            imprimirDadosAreaLivro(controleArea.recuperar());
        } catch (Exception erro) {
            JOptionPane.showMessageDialog(null, erro.getMessage());
        }
    }

    private void limpaCampos() {
        jTextFieldCodigoCDD.setText("");
        jTextFieldDescricaoCDD.setText("");
        jTextFieldCodigoCDD.requestFocus();
    }

    private void habilitaCampos() {
        jTextFieldCodigoCDD.setEnabled(true);
        jTextFieldDescricaoCDD.setEnabled(true);
    }

    private void desabilitaCampos() {
        jTextFieldCodigoCDD.setEnabled(false);
        jTextFieldDescricaoCDD.setEnabled(false);
    }

    private void imprimirDadosAreaLivro(ArrayList<AreaCdd> lista) throws Exception {

        DefaultTableModel model = (DefaultTableModel) jTableTelaAreaLivro.getModel();
        model.setNumRows(0);
        Collections.sort(lista);
        for (int pos = 0; pos < lista.size(); pos++) {
            String linha[] = new String[3];
            AreaCdd aux = lista.get(pos);
            linha[0] = "" + aux.getId();
            linha[1] = aux.getCdd();
            linha[2] = aux.getDescricaoDaArea().toUpperCase();
            model.addRow(linha);

        }
    }

    private void preencherFormulario() {

        int linha = jTableTelaAreaLivro.getSelectedRow();
        if (linha >= 0) {

            String campoId = jTableTelaAreaLivro.getValueAt(linha, 0).toString();
            String campoCdd = jTableTelaAreaLivro.getValueAt(linha, 1).toString();
            String campoDescricao = jTableTelaAreaLivro.getValueAt(linha, 2).toString();

            areaAnterior.setId(Integer.parseInt(campoId));
            areaAnterior.setDescricaoDaArea(campoDescricao);

            jTextFieldCodigoCDD.setText(campoCdd);
            jTextFieldDescricaoCDD.setText(campoDescricao);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelTelaAreaLivro = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextFieldCodigoCDD = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldDescricaoCDD = new javax.swing.JTextField();
        jTextFieldPesquisarCDD = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableTelaAreaLivro = new javax.swing.JTable();
        jButtonPesquisarCdd = new javax.swing.JButton();
        jButtonVoltarAquemChamou = new javax.swing.JButton();
        jButtonLimparCampos = new javax.swing.JButton();
        jButtonSalvarAlteracao = new javax.swing.JButton();
        jButtonEditar = new javax.swing.JButton();
        jButtonImportarAreaCdd = new javax.swing.JButton();
        jButtonIncluir = new javax.swing.JButton();
        jButtonNovo = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cadastro e Importação de Áreas CDD");
        setResizable(false);

        jLabel1.setText("Código CDD");

        jLabel2.setText("Descrição");

        jTextFieldPesquisarCDD.setForeground(new java.awt.Color(102, 102, 102));
        jTextFieldPesquisarCDD.setText("Digite aqui o código CDD ou a descrição da área do livro");
        jTextFieldPesquisarCDD.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextFieldPesquisarCDDFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldPesquisarCDDFocusLost(evt);
            }
        });

        jTableTelaAreaLivro.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Código CDD", "Descrição do CDD"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableTelaAreaLivro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableTelaAreaLivroMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableTelaAreaLivro);
        if (jTableTelaAreaLivro.getColumnModel().getColumnCount() > 0) {
            jTableTelaAreaLivro.getColumnModel().getColumn(0).setMinWidth(50);
            jTableTelaAreaLivro.getColumnModel().getColumn(0).setMaxWidth(50);
            jTableTelaAreaLivro.getColumnModel().getColumn(1).setMinWidth(60);
            jTableTelaAreaLivro.getColumnModel().getColumn(1).setMaxWidth(60);
        }

        jButtonPesquisarCdd.setText("Pesquisar");
        jButtonPesquisarCdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPesquisarCddActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelTelaAreaLivroLayout = new javax.swing.GroupLayout(jPanelTelaAreaLivro);
        jPanelTelaAreaLivro.setLayout(jPanelTelaAreaLivroLayout);
        jPanelTelaAreaLivroLayout.setHorizontalGroup(
            jPanelTelaAreaLivroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTelaAreaLivroLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelTelaAreaLivroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 661, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelTelaAreaLivroLayout.createSequentialGroup()
                        .addComponent(jTextFieldPesquisarCDD)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonPesquisarCdd))
                    .addGroup(jPanelTelaAreaLivroLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldCodigoCDD, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(53, 53, 53)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldDescricaoCDD)))
                .addContainerGap())
        );
        jPanelTelaAreaLivroLayout.setVerticalGroup(
            jPanelTelaAreaLivroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTelaAreaLivroLayout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addGroup(jPanelTelaAreaLivroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextFieldCodigoCDD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jTextFieldDescricaoCDD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelTelaAreaLivroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldPesquisarCDD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonPesquisarCdd))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(119, 119, 119))
        );

        jButtonVoltarAquemChamou.setText("FECHAR");
        jButtonVoltarAquemChamou.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonVoltarAquemChamouActionPerformed(evt);
            }
        });

        jButtonLimparCampos.setText("LIMPAR");
        jButtonLimparCampos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLimparCamposActionPerformed(evt);
            }
        });

        jButtonSalvarAlteracao.setText("SALVAR ALTERAÇÃO");
        jButtonSalvarAlteracao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSalvarAlteracaoActionPerformed(evt);
            }
        });

        jButtonEditar.setText("EDITAR");
        jButtonEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEditarActionPerformed(evt);
            }
        });

        jButtonImportarAreaCdd.setText("IMPORTAR");
        jButtonImportarAreaCdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonImportarAreaCddActionPerformed(evt);
            }
        });

        jButtonIncluir.setText("INCLUIR");
        jButtonIncluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonIncluirActionPerformed(evt);
            }
        });

        jButtonNovo.setBackground(new java.awt.Color(0, 102, 255));
        jButtonNovo.setText("NOVO");
        jButtonNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNovoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanelTelaAreaLivro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButtonNovo)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonIncluir)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonImportarAreaCdd)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonEditar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonSalvarAlteracao)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonLimparCampos)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonVoltarAquemChamou)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelTelaAreaLivro, javax.swing.GroupLayout.PREFERRED_SIZE, 391, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonVoltarAquemChamou)
                    .addComponent(jButtonLimparCampos)
                    .addComponent(jButtonSalvarAlteracao)
                    .addComponent(jButtonEditar)
                    .addComponent(jButtonImportarAreaCdd)
                    .addComponent(jButtonIncluir)
                    .addComponent(jButtonNovo))
                .addContainerGap(27, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonImportarAreaCddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonImportarAreaCddActionPerformed
        try {
            controleArea.importarTabelaCdd(arquivoOrigem);
            limpaCampos();
            imprimirDadosAreaLivro(controleArea.recuperar());

        } catch (Exception erro) {
            JOptionPane.showMessageDialog(null, erro.getMessage());
        }
    }//GEN-LAST:event_jButtonImportarAreaCddActionPerformed

    private void jButtonIncluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonIncluirActionPerformed
        if (jTextFieldCodigoCDD.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "O código CDD deve ser informado!\n");
            jTextFieldCodigoCDD.requestFocus();
        } else if (jTextFieldDescricaoCDD.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "A descrição do CDD deve ser informada!\n");
            jTextFieldDescricaoCDD.requestFocus();
        } else {
            try {
                area.setCdd(jTextFieldCodigoCDD.getText());
                area.setDescricaoDaArea(jTextFieldDescricaoCDD.getText());
                controleArea.incluirAreaCdd(area);
                limpaCampos();
                imprimirDadosAreaLivro(controleArea.recuperar());
                desabilitaCampos();

            } catch (Exception erro) {
                JOptionPane.showMessageDialog(null, erro.getMessage());
            }
            jTextFieldCodigoCDD.requestFocus();
        }
    }//GEN-LAST:event_jButtonIncluirActionPerformed

    private void jButtonNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNovoActionPerformed
        try {
            habilitaCampos();
            jButtonIncluir.setEnabled(true);
            jTextFieldCodigoCDD.requestFocus();
        } catch (Exception e) {
        }
    }//GEN-LAST:event_jButtonNovoActionPerformed

    private void jButtonEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEditarActionPerformed
        try {
            habilitaCampos();
            jButtonIncluir.setEnabled(false);
            jTextFieldCodigoCDD.requestFocus();
        } catch (Exception e) {
        }
    }//GEN-LAST:event_jButtonEditarActionPerformed

    private void jButtonSalvarAlteracaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSalvarAlteracaoActionPerformed

        if (jTextFieldCodigoCDD.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "O código CDD deve ser informado!\n");
            jTextFieldCodigoCDD.requestFocus();
        } else if (jTextFieldDescricaoCDD.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "A descrição do CDD deve ser informada!\n");
            jTextFieldDescricaoCDD.requestFocus();
        } else {
            try {
                area.setId(areaAnterior.getId());
                area.setCdd(jTextFieldCodigoCDD.getText());
                area.setDescricaoDaArea(jTextFieldDescricaoCDD.getText());
                int opcao = JOptionPane.showConfirmDialog(null, "Deseja realmente alterar " + areaAnterior.getDescricaoDaArea() + "?");
                if (opcao == 0) {
                    controleArea.alterar(area);
                }

                limpaCampos();
                imprimirDadosAreaLivro(controleArea.recuperar());
                desabilitaCampos();

            } catch (Exception erro) {
                JOptionPane.showMessageDialog(null, erro.getMessage());
            }
            jTextFieldCodigoCDD.requestFocus();
        }
    }//GEN-LAST:event_jButtonSalvarAlteracaoActionPerformed

    private void jTableTelaAreaLivroMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableTelaAreaLivroMouseClicked
        preencherFormulario();
    }//GEN-LAST:event_jTableTelaAreaLivroMouseClicked

    private void jButtonVoltarAquemChamouActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonVoltarAquemChamouActionPerformed
        try {
            this.dispose();

        } catch (Exception e) {
        }
    }//GEN-LAST:event_jButtonVoltarAquemChamouActionPerformed

    private void jButtonPesquisarCddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPesquisarCddActionPerformed
        try {
            imprimirDadosAreaLivro(controleArea.pesquisar(jTextFieldPesquisarCDD.getText().toLowerCase()));
            jTextFieldPesquisarCDD.setText("");
            jTextFieldPesquisarCDD.requestFocus();

        } catch (Exception erro) {
            JOptionPane.showMessageDialog(null, erro.getMessage());
            jTextFieldPesquisarCDD.setText("");
            jTextFieldPesquisarCDD.requestFocus();

        }
    }//GEN-LAST:event_jButtonPesquisarCddActionPerformed

    private void jButtonLimparCamposActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLimparCamposActionPerformed
        try {
            limpaCampos();
            imprimirDadosAreaLivro(controleArea.recuperar());
            
        } catch (Exception ex) {
            Logger.getLogger(TelaAreaLivro.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonLimparCamposActionPerformed

    private void jTextFieldPesquisarCDDFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldPesquisarCDDFocusGained
        if (jTextFieldPesquisarCDD.getText().equals("Digite aqui o código CDD ou a descrição da área do livro")) {
            jTextFieldPesquisarCDD.setText("");
            jButtonPesquisarCdd.setEnabled(true);
        }
    }//GEN-LAST:event_jTextFieldPesquisarCDDFocusGained

    private void jTextFieldPesquisarCDDFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldPesquisarCDDFocusLost
        if (jTextFieldPesquisarCDD.getText().equals("")) {
            jTextFieldPesquisarCDD.setText("Digite aqui o código CDD ou a descrição da área do livro");
            jButtonPesquisarCdd.setEnabled(false);
        }
    }//GEN-LAST:event_jTextFieldPesquisarCDDFocusLost

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaAreaLivro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaAreaLivro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaAreaLivro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaAreaLivro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                TelaAreaLivro dialog = new TelaAreaLivro(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonEditar;
    private javax.swing.JButton jButtonImportarAreaCdd;
    private javax.swing.JButton jButtonIncluir;
    private javax.swing.JButton jButtonLimparCampos;
    private javax.swing.JButton jButtonNovo;
    private javax.swing.JButton jButtonPesquisarCdd;
    private javax.swing.JButton jButtonSalvarAlteracao;
    private javax.swing.JButton jButtonVoltarAquemChamou;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanelTelaAreaLivro;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableTelaAreaLivro;
    private javax.swing.JTextField jTextFieldCodigoCDD;
    private javax.swing.JTextField jTextFieldDescricaoCDD;
    private javax.swing.JTextField jTextFieldPesquisarCDD;
    // End of variables declaration//GEN-END:variables
}
