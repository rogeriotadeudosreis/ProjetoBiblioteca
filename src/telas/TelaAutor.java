/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package telas;

import ENUMERADORES.EnumNomesDeArquivos;
import classes.Autor;
import controle.ControleAutor;
import java.util.ArrayList;
import java.util.Collections;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author roger
 */
public class TelaAutor extends javax.swing.JDialog {

    ControleAutor controleAutor;
    Autor autorAntigo = null;
    Autor autorNovo = null;

    /**
     * Creates new form TelaAutor
     */
    public TelaAutor(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
        jTextFieldNomeAutor.setEnabled(false);
        jButtonPesquisar.setEnabled(false);
        jTextFieldNomeAutor.requestFocus();

        try {

            controleAutor = new ControleAutor(EnumNomesDeArquivos.AUTORES + ".txt");
            autorAntigo = new Autor();
            autorNovo = new Autor();

            imprimirDadosAutorNaGrid(controleAutor.recuperar());

        } catch (Exception erro) {
            JOptionPane.showMessageDialog(null, erro.getMessage());
        }

    }

    private void imprimirDadosAutorNaGrid(ArrayList<Autor> listaAutores) throws Exception {
        DefaultTableModel model = (DefaultTableModel) jTableCadAutor.getModel();
        model.setNumRows(0);
        Collections.sort(listaAutores);
        for (int pos = 0; pos < listaAutores.size(); pos++) {
            String[] linha = new String[2];
            Autor aux = listaAutores.get(pos);
            linha[0] = "" + aux.getId();
            linha[1] = aux.getNomeAutor().toUpperCase();
            model.addRow(linha);

        }

    }

    public void limpaCamposDeEntrada() {
        jTextFieldNomeAutor.setText("");
    }

    public void preencherCamposFormulario() {
        int indiceDaLinha = jTableCadAutor.getSelectedRow();
        String campoId = jTableCadAutor.getValueAt(indiceDaLinha, 0).toString();
        String campoNome = jTableCadAutor.getValueAt(indiceDaLinha, 1).toString();

        jTextFieldNomeAutor.setText(campoNome);

        autorAntigo.setId(Integer.parseInt(campoId));
        autorAntigo.setNomeAutor(jTextFieldNomeAutor.getText());

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelAutor = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableCadAutor = new javax.swing.JTable();
        jTextFieldNomeAutor = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jButtonIncluir = new javax.swing.JButton();
        jButtonSalvarAlteracao = new javax.swing.JButton();
        jButtonLimparCampos = new javax.swing.JButton();
        jButtonFechar = new javax.swing.JButton();
        jButtonEditar = new javax.swing.JButton();
        jButtonNovoAutor = new javax.swing.JButton();
        jTextFieldPesquisarAutor = new javax.swing.JTextField();
        jButtonPesquisar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cadastro de Autor");

        jTableCadAutor.setAutoCreateRowSorter(true);
        jTableCadAutor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "NOME DO AUTOR"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableCadAutor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableCadAutorMouseClicked(evt);
            }
        });
        jTableCadAutor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTableCadAutorKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jTableCadAutor);
        if (jTableCadAutor.getColumnModel().getColumnCount() > 0) {
            jTableCadAutor.getColumnModel().getColumn(0).setMinWidth(50);
            jTableCadAutor.getColumnModel().getColumn(0).setMaxWidth(50);
        }

        jTextFieldNomeAutor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldNomeAutorKeyReleased(evt);
            }
        });

        jLabel3.setText("Nome do Autor");

        jButtonIncluir.setText("INCLUIR");
        jButtonIncluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonIncluirActionPerformed(evt);
            }
        });

        jButtonSalvarAlteracao.setText("SALVAR ALTERAÇÃO");
        jButtonSalvarAlteracao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSalvarAlteracaoActionPerformed(evt);
            }
        });

        jButtonLimparCampos.setText("LIMPAR");
        jButtonLimparCampos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLimparCamposActionPerformed(evt);
            }
        });

        jButtonFechar.setText("FECHAR");
        jButtonFechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFecharActionPerformed(evt);
            }
        });

        jButtonEditar.setText("EDITAR");
        jButtonEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEditarActionPerformed(evt);
            }
        });

        jButtonNovoAutor.setText("NOVO");
        jButtonNovoAutor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNovoAutorActionPerformed(evt);
            }
        });

        jTextFieldPesquisarAutor.setForeground(new java.awt.Color(102, 102, 102));
        jTextFieldPesquisarAutor.setText("Digite aqui o nome do autor");
        jTextFieldPesquisarAutor.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextFieldPesquisarAutorFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldPesquisarAutorFocusLost(evt);
            }
        });

        jButtonPesquisar.setText("PESQUISAR");
        jButtonPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPesquisarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelAutorLayout = new javax.swing.GroupLayout(jPanelAutor);
        jPanelAutor.setLayout(jPanelAutorLayout);
        jPanelAutorLayout.setHorizontalGroup(
            jPanelAutorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelAutorLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelAutorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldNomeAutor)
                    .addGroup(jPanelAutorLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButtonNovoAutor, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonIncluir)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonEditar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonSalvarAlteracao)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonLimparCampos)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonFechar))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 576, Short.MAX_VALUE)
                    .addGroup(jPanelAutorLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanelAutorLayout.createSequentialGroup()
                        .addComponent(jTextFieldPesquisarAutor)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonPesquisar)))
                .addContainerGap())
        );
        jPanelAutorLayout.setVerticalGroup(
            jPanelAutorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelAutorLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldNomeAutor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelAutorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldPesquisarAutor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonPesquisar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 262, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(jPanelAutorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonSalvarAlteracao)
                    .addComponent(jButtonLimparCampos)
                    .addComponent(jButtonFechar)
                    .addComponent(jButtonEditar)
                    .addComponent(jButtonIncluir)
                    .addComponent(jButtonNovoAutor))
                .addGap(20, 20, 20))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelAutor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelAutor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jTableCadAutorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableCadAutorMouseClicked
        try {

            preencherCamposFormulario();
            jTextFieldNomeAutor.setEnabled(true);

            jTextFieldNomeAutor.requestFocus();

        } catch (Exception erro) {
            JOptionPane.showMessageDialog(null, erro.getMessage());
        }
    }//GEN-LAST:event_jTableCadAutorMouseClicked

    private void jTableCadAutorKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTableCadAutorKeyReleased
        preencherCamposFormulario();
    }//GEN-LAST:event_jTableCadAutorKeyReleased

    private void jTextFieldNomeAutorKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldNomeAutorKeyReleased
        jTextFieldNomeAutor.setText(jTextFieldNomeAutor.getText().replaceAll("[^a-z|^A-Z|^ |^é|^ê|^ã|^â|^ó|^õ|^ô]", ""));
    }//GEN-LAST:event_jTextFieldNomeAutorKeyReleased

    private void jButtonIncluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonIncluirActionPerformed
        try {
            if (jTextFieldNomeAutor.getText().isEmpty()) {
                throw new Exception("O campo --> nome do autor deve ser preenchido");
            }
            autorNovo.setNomeAutor(jTextFieldNomeAutor.getText());
            controleAutor.incluirAutor(autorNovo);
            limpaCamposDeEntrada();
            imprimirDadosAutorNaGrid(controleAutor.recuperar());
            jTextFieldNomeAutor.setEnabled(false);
            jButtonIncluir.setEnabled(false);

        } catch (Exception erro) {
            JOptionPane.showMessageDialog(null, erro.getMessage());
        }
        jTextFieldNomeAutor.setText("");
        jTextFieldNomeAutor.requestFocus();
    }//GEN-LAST:event_jButtonIncluirActionPerformed

    private void jButtonSalvarAlteracaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSalvarAlteracaoActionPerformed
        try {
            if (jTextFieldNomeAutor.getText().isEmpty()) {
                throw new Exception("O campo do nome do autor deve ser preenchido");
            }
            int opcao = JOptionPane.showConfirmDialog(null, "Deseja alterar "
                    + autorAntigo.getNomeAutor() + "?");
            if (opcao == 0) {
                autorNovo = new Autor(autorAntigo.getId(), jTextFieldNomeAutor.getText());
                controleAutor.alterarAutor(autorNovo);
                imprimirDadosAutorNaGrid(controleAutor.recuperar());
                jTextFieldNomeAutor.requestFocus();

            }
            limpaCamposDeEntrada();
            jTextFieldNomeAutor.setEnabled(false);
            jTextFieldNomeAutor.setText("");
            jTextFieldNomeAutor.requestFocus();

        } catch (Exception erro) {
            JOptionPane.showMessageDialog(null, erro.getMessage());

        }
    }//GEN-LAST:event_jButtonSalvarAlteracaoActionPerformed

    private void jButtonLimparCamposActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLimparCamposActionPerformed
        try {
            limpaCamposDeEntrada();
            jTextFieldNomeAutor.requestFocus();
            imprimirDadosAutorNaGrid(controleAutor.recuperar());
            jButtonPesquisar.setEnabled(false);
        } catch (Exception erro) {
            JOptionPane.showMessageDialog(null, erro.getMessage());
        }
    }//GEN-LAST:event_jButtonLimparCamposActionPerformed

    private void jButtonFecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFecharActionPerformed
        try {

            this.dispose();
        } catch (Exception ex) {
            Logger.getLogger(TelaAutor.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonFecharActionPerformed

    private void jButtonEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEditarActionPerformed

        jTextFieldNomeAutor.setEnabled(true);
        jTextFieldNomeAutor.requestFocus();
        jTextFieldPesquisarAutor.setEnabled(true);
        jButtonSalvarAlteracao.setEnabled(true);
        jButtonIncluir.setEnabled(false);
    }//GEN-LAST:event_jButtonEditarActionPerformed

    private void jButtonNovoAutorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNovoAutorActionPerformed
        jTextFieldNomeAutor.setEnabled(true);
        jButtonIncluir.setEnabled(true);
        jTextFieldNomeAutor.setText("");
        jTextFieldNomeAutor.requestFocus();
        jButtonSalvarAlteracao.setEnabled(false);
    }//GEN-LAST:event_jButtonNovoAutorActionPerformed

    private void jButtonPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPesquisarActionPerformed
        try {
            imprimirDadosAutorNaGrid(controleAutor.pesquisarAutor(jTextFieldPesquisarAutor.getText()));
            jTextFieldPesquisarAutor.requestFocus();
            jTextFieldPesquisarAutor.setText("");

        } catch (Exception erro) {
            JOptionPane.showMessageDialog(null, erro.getMessage());
            jTextFieldPesquisarAutor.requestFocus();
            jTextFieldPesquisarAutor.setText("");
        }
    }//GEN-LAST:event_jButtonPesquisarActionPerformed

    private void jTextFieldPesquisarAutorFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldPesquisarAutorFocusGained
        if (jTextFieldPesquisarAutor.getText().equals("Digite aqui o nome do autor")) {
            jTextFieldPesquisarAutor.setText("");
            jButtonPesquisar.setEnabled(true);
        }
    }//GEN-LAST:event_jTextFieldPesquisarAutorFocusGained

    private void jTextFieldPesquisarAutorFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldPesquisarAutorFocusLost
        if (jTextFieldPesquisarAutor.getText().equals("")) {
            jTextFieldPesquisarAutor.setText("Digite aqui o nome do autor");
            jButtonPesquisar.setEnabled(false);
        }
    }//GEN-LAST:event_jTextFieldPesquisarAutorFocusLost

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaAutor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaAutor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaAutor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaAutor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                TelaAutor dialog = new TelaAutor(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonEditar;
    private javax.swing.JButton jButtonFechar;
    private javax.swing.JButton jButtonIncluir;
    private javax.swing.JButton jButtonLimparCampos;
    private javax.swing.JButton jButtonNovoAutor;
    private javax.swing.JButton jButtonPesquisar;
    private javax.swing.JButton jButtonSalvarAlteracao;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanelAutor;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableCadAutor;
    private javax.swing.JTextField jTextFieldNomeAutor;
    private javax.swing.JTextField jTextFieldPesquisarAutor;
    // End of variables declaration//GEN-END:variables
}
