/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package telas;

import ENUMERADORES.EnumNomesDeArquivos;
import classes.Editora;
import controle.ControleEditora;
import java.util.ArrayList;
import java.util.Collections;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author roger
 */
public class TelaEditora extends javax.swing.JDialog {

    ControleEditora controleEditora = null;
    Editora editora = null;
    Editora editoraAntiga = null;

    /**
     * Creates new form TelaEditora
     */
    public TelaEditora(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);

        jTextFieldNomeEditora.setEnabled(false);
        jTextFieldNomeEditora.requestFocus();
        jButtonIncluir.setEnabled(false);
        jButtonSalvarAlteracao.setEnabled(false);
        jButtonPesquisarEditora.setEnabled(false);

        try {

            controleEditora = new ControleEditora(EnumNomesDeArquivos.EDITORAS + ".txt");
            editora = new Editora();
            editoraAntiga = new Editora();
            imprimirDadosEditoraGrid(controleEditora.recuperar());

        } catch (Exception erro) {
            JOptionPane.showMessageDialog(null, erro.getMessage());
        }
    }

    private void imprimirDadosEditoraGrid(ArrayList<Editora> lista) throws Exception {
        DefaultTableModel model = (DefaultTableModel) jTableCadEditora.getModel();
        model.setNumRows(0);
        Collections.sort(lista);
        for (int pos = 0; pos < lista.size(); pos++) {
            String[] linha = new String[2];
            Editora aux = lista.get(pos);
            linha[0] = "" + aux.getId();
            linha[1] = aux.getDescricaoEditora().toUpperCase();
            model.addRow(linha);
        }
    }

    public void limpaCamposDeEntrada() throws Exception {
        jTextFieldNomeEditora.setText("");
        imprimirDadosEditoraGrid(controleEditora.recuperar());

    }

    public void preencherCamposFormulario() {
        String posicaoId = jTableCadEditora.getValueAt(jTableCadEditora.getSelectedRow(), 0).toString();
        String posicaoNome = jTableCadEditora.getValueAt(jTableCadEditora.getSelectedRow(), 1).toString();
        jTextFieldNomeEditora.setText(posicaoNome);

        editoraAntiga.setId(Integer.parseInt(posicaoId));
        editoraAntiga.setDescricaoEditora(jTextFieldNomeEditora.getText());

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelCadEditoras = new javax.swing.JPanel();
        jTextFieldNomeEditora = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableCadEditora = new javax.swing.JTable();
        jButtonIncluir = new javax.swing.JButton();
        jButtonSalvarAlteracao = new javax.swing.JButton();
        jButtonLimparCampos = new javax.swing.JButton();
        jButtonVoltar = new javax.swing.JButton();
        jButtonNovaEditora = new javax.swing.JButton();
        jButtonEditar = new javax.swing.JButton();
        jTextFieldPesquisar = new javax.swing.JTextField();
        jButtonPesquisarEditora = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Cadastro de Editora");

        jPanelCadEditoras.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jTextFieldNomeEditora.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldNomeEditoraKeyReleased(evt);
            }
        });

        jLabel3.setText("Nome da Editora");

        jTableCadEditora.setAutoCreateRowSorter(true);
        jTableCadEditora.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "DESCRIÇÃO DA EDITORA"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableCadEditora.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableCadEditoraMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableCadEditora);
        if (jTableCadEditora.getColumnModel().getColumnCount() > 0) {
            jTableCadEditora.getColumnModel().getColumn(0).setMinWidth(50);
            jTableCadEditora.getColumnModel().getColumn(0).setMaxWidth(50);
        }

        jButtonIncluir.setText("INCLUIR");
        jButtonIncluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonIncluirActionPerformed(evt);
            }
        });

        jButtonSalvarAlteracao.setText("SALVAR ALTERAÇÃO");
        jButtonSalvarAlteracao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSalvarAlteracaoActionPerformed(evt);
            }
        });

        jButtonLimparCampos.setText("LIMPAR");
        jButtonLimparCampos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLimparCamposActionPerformed(evt);
            }
        });

        jButtonVoltar.setText("FECHAR");
        jButtonVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonVoltarActionPerformed(evt);
            }
        });

        jButtonNovaEditora.setText("NOVO");
        jButtonNovaEditora.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNovaEditoraActionPerformed(evt);
            }
        });

        jButtonEditar.setText("EDITAR");
        jButtonEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEditarActionPerformed(evt);
            }
        });

        jTextFieldPesquisar.setForeground(new java.awt.Color(102, 102, 102));
        jTextFieldPesquisar.setText("Digite aqui o nome da editora");
        jTextFieldPesquisar.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextFieldPesquisarFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldPesquisarFocusLost(evt);
            }
        });
        jTextFieldPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldPesquisarActionPerformed(evt);
            }
        });

        jButtonPesquisarEditora.setText("PESQUISAR");
        jButtonPesquisarEditora.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPesquisarEditoraActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelCadEditorasLayout = new javax.swing.GroupLayout(jPanelCadEditoras);
        jPanelCadEditoras.setLayout(jPanelCadEditorasLayout);
        jPanelCadEditorasLayout.setHorizontalGroup(
            jPanelCadEditorasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCadEditorasLayout.createSequentialGroup()
                .addGroup(jPanelCadEditorasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanelCadEditorasLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonNovaEditora, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonIncluir)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonEditar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonSalvarAlteracao)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonLimparCampos)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonVoltar))
                    .addGroup(jPanelCadEditorasLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanelCadEditorasLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jTextFieldPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 481, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonPesquisarEditora))
                    .addComponent(jTextFieldNomeEditora))
                .addContainerGap())
        );
        jPanelCadEditorasLayout.setVerticalGroup(
            jPanelCadEditorasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCadEditorasLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldNomeEditora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelCadEditorasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonPesquisarEditora))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 302, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(jPanelCadEditorasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonSalvarAlteracao)
                    .addComponent(jButtonLimparCampos)
                    .addComponent(jButtonVoltar)
                    .addComponent(jButtonEditar)
                    .addComponent(jButtonIncluir)
                    .addComponent(jButtonNovaEditora))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelCadEditoras, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelCadEditoras, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldNomeEditoraKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldNomeEditoraKeyReleased

    }//GEN-LAST:event_jTextFieldNomeEditoraKeyReleased

    private void jTableCadEditoraMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableCadEditoraMouseClicked
        try {
            preencherCamposFormulario();
            jTextFieldNomeEditora.requestFocus();

        } catch (Exception erro) {
            JOptionPane.showMessageDialog(null, erro.getMessage());
        }
    }//GEN-LAST:event_jTableCadEditoraMouseClicked

    private void jButtonIncluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonIncluirActionPerformed
        try {
            if (jTextFieldNomeEditora.getText().isEmpty()) {
                throw new Exception("O campo da descrição da editora deve ser preenchido");
            }

            editora.setDescricaoEditora(jTextFieldNomeEditora.getText());
            controleEditora.incluirEditora(editora);
            limpaCamposDeEntrada();
            imprimirDadosEditoraGrid(controleEditora.recuperar());
            jTextFieldNomeEditora.setEnabled(false);
            jButtonIncluir.setEnabled(false);

        } catch (Exception erro) {
            JOptionPane.showMessageDialog(null, erro.getMessage());
            jTextFieldNomeEditora.setText("");
            jTextFieldNomeEditora.requestFocus();

        }
    }//GEN-LAST:event_jButtonIncluirActionPerformed

    private void jButtonSalvarAlteracaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSalvarAlteracaoActionPerformed
        try {
            if (jTextFieldNomeEditora.getText().isEmpty()) {
                throw new Exception("O campo da descrição da editora deve ser preenchido");
            }
            int opcao = JOptionPane.showConfirmDialog(null, "Deseja alterar "
                    + editoraAntiga.getDescricaoEditora() + "?");
            // Este if verifica a minha opção de escolha dentro da caixa de diálogo do jPane
            if (opcao == 0) {

                editora = new Editora(editoraAntiga.getId(), jTextFieldNomeEditora.getText());
                controleEditora.alterarEditora(editora);
                imprimirDadosEditoraGrid(controleEditora.recuperar());
                jTextFieldNomeEditora.requestFocus();

            }
            limpaCamposDeEntrada();
            jTextFieldNomeEditora.setEnabled(false);

        } catch (Exception erro) {
            JOptionPane.showMessageDialog(null, erro.getMessage());
            jTextFieldNomeEditora.setText("");
            jTextFieldNomeEditora.requestFocus();

        }
    }//GEN-LAST:event_jButtonSalvarAlteracaoActionPerformed

    private void jButtonLimparCamposActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLimparCamposActionPerformed
        try {

            limpaCamposDeEntrada();
            jTextFieldNomeEditora.requestFocus();

        } catch (Exception ex) {
            Logger.getLogger(TelaEditora.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonLimparCamposActionPerformed

    private void jButtonVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonVoltarActionPerformed
        try {

            this.dispose();
        } catch (Exception ex) {
            Logger.getLogger(TelaEditora.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonVoltarActionPerformed

    private void jButtonNovaEditoraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNovaEditoraActionPerformed
        jTextFieldNomeEditora.setEnabled(true);
        jTextFieldNomeEditora.requestFocus();
        jButtonIncluir.setEnabled(true);
        jTextFieldNomeEditora.setText("");
        jButtonSalvarAlteracao.setEnabled(false);
    }//GEN-LAST:event_jButtonNovaEditoraActionPerformed

    private void jButtonEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEditarActionPerformed
        jTextFieldNomeEditora.setEnabled(true);
        jTextFieldNomeEditora.requestFocus();
        jButtonSalvarAlteracao.setEnabled(true);
        jButtonIncluir.setEnabled(false);
    }//GEN-LAST:event_jButtonEditarActionPerformed

    private void jButtonPesquisarEditoraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPesquisarEditoraActionPerformed
        try {
            imprimirDadosEditoraGrid(controleEditora.pesquisarEditora(jTextFieldPesquisar.getText()));
            jTextFieldPesquisar.requestFocus();
            jTextFieldPesquisar.setText("");

        } catch (Exception erro) {
            JOptionPane.showMessageDialog(null, erro.getMessage());
            jTextFieldPesquisar.requestFocus();
            jTextFieldPesquisar.setText("");
        }
    }//GEN-LAST:event_jButtonPesquisarEditoraActionPerformed

    private void jTextFieldPesquisarFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldPesquisarFocusGained
        if (jTextFieldPesquisar.getText().equals("Digite aqui o nome da editora")) {
            jTextFieldPesquisar.setText("");
            jButtonPesquisarEditora.setEnabled(true);
        }
    }//GEN-LAST:event_jTextFieldPesquisarFocusGained

    private void jTextFieldPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldPesquisarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldPesquisarActionPerformed

    private void jTextFieldPesquisarFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldPesquisarFocusLost
        if (jTextFieldPesquisar.getText().equals("")) {
            jTextFieldPesquisar.setText("Digite aqui o nome da editora");
            jButtonPesquisarEditora.setEnabled(false);
        }
    }//GEN-LAST:event_jTextFieldPesquisarFocusLost

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaEditora.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaEditora.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaEditora.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaEditora.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                TelaEditora dialog = new TelaEditora(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonEditar;
    private javax.swing.JButton jButtonIncluir;
    private javax.swing.JButton jButtonLimparCampos;
    private javax.swing.JButton jButtonNovaEditora;
    private javax.swing.JButton jButtonPesquisarEditora;
    private javax.swing.JButton jButtonSalvarAlteracao;
    private javax.swing.JButton jButtonVoltar;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanelCadEditoras;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableCadEditora;
    private javax.swing.JTextField jTextFieldNomeEditora;
    private javax.swing.JTextField jTextFieldPesquisar;
    // End of variables declaration//GEN-END:variables
}
